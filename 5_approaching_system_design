Who is going to use it?
How are they going to use it?
How many users are there?
What does the system do?
What are the inputs and outputs of the system?
How much data do we expect to handle?
How many requests per second do we expect?
What is the expected read to write ratio?


Step1)
    Questions to Ask are above one's
step2)
    Have a image of this in mind-> intro_system_design image
step3)
    Create a high level design
    Sketch the main components and connections
    Justify your ideas
step4)
    design core components
    Dive into details for each core component. For example,
    if you were asked to design a url shortening service, discuss:
    Generating and storing a hash of the full url
        MD5 and Base62
        Hash collisions
        SQL or NoSQL
        Database schema
    Translating a hashed url to the full url
        Database lookup
    API and object-oriented design
step5)
    Scale the design
        Load balancer
        Horizontal scaling
        Caching
        Database sharding


